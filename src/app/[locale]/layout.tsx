import "@/app/globals.css";
import { routing } from "@/i18n/routing";
import type { Metadata } from "next";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { notFound } from "next/navigation";
import { Lato, Montserrat } from "next/font/google";

import { Toaster } from "sonner";
import { ReduxProvider } from "@/store/ReduxProvider";
import { LanguageProvider } from "@/contexts/LanguageContext";

const montserrat = Montserrat({
  variable: "--font-montserrat",
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
  style: ["normal", "italic"],
  subsets: ["latin"],
});

const lato = Lato({
  variable: "--font-lato",
  weight: ["100", "300", "400", "700", "900"],
  style: ["normal", "italic"],
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "SHENIANI",
  description: "Generated by create next app",
};

interface IProps {
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}
export default async function RootLayout({ children, params }: IProps) {
  // Ensure that the incoming `locale` is valid
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  return (
    <html
      lang={locale}
      dir={locale === "ar" || locale === "ur" ? "rtl" : "ltr"}
      className={`${lato.variable} ${montserrat.variable} scroll-smooth antialiased`}
      suppressHydrationWarning
    >
      <body>
        <ReduxProvider>
          <NextIntlClientProvider>
            <LanguageProvider initialLocale={locale}>
              {children}
              <Toaster position="top-right" />
            </LanguageProvider>
          </NextIntlClientProvider>
        </ReduxProvider>
      </body>
    </html>
  );
}
